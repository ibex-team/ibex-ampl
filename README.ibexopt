IbexOpt is a solver based on IBEX versions 2.8.9 that can be used
either "stand-alone" or with AMPL's options to solve nonlinear 
problems expressed in AMPL.

To use IbexOpt with AMPL, you have several options.  You can invoke
it within an AMPL session by saying

	solve;

or, if $solver is not already ibexopt,

	option solver ibexopt;
	solve;

The argument -AMPL causes minos to emit a one-line banner; when
$solver has its default value (minos), AMPL's solve command invokes

	ibexopt stub -AMPL

If a stub is present, minos tries to write the computed solution to
stub.sol

For details not given here, see the IBEX documentation:
http://www.ibex-lib.org

Source for IBEX is available from
https://github.com/ibex-team/


-----------------------
solve_result_num values
=======================

Here is a table of solve_result_num values that "ibexopt" can return
to an AMPL session, along with the text that appears in the associated
solve_message.

	Value	Message

	0	OPTIMIZATION SUCCESS! The global minimum 
		(with respect to the precision required) 
		has been found. In particular, at least 
		one feasible point has been found, less 
		than obj_init_bound, and in the time limit.
	200	INFEASIBLE PORBLEM.
		No feasible point exist less than obj_init_bound.
		In particular, the function returns INFEASIBLE 
		if the initial bound \"obj_init_bound\" is LESS 
		than the true minimum (this case is only possible
		if obj_abs_prec and obj_rel_prec are 0). In the
		latter case, there may exist feasible points.
	201	NO FEASIBLE POINT FOUND. 
		No feasible point could be found less than 
		obj_init_bound. Contrary to INFEASIBLE, 
		infeasibility is not proven here. Warning: this 
		return value is sensitive to the abs_eps_f and 
		rel_eps_f parameters. The upperbounding makes the 
		optimizer only looking for points less than 
		min{(1-rel_eps_f)*obj_init_bound,obj_init_bound-abs_eps_f}.
	300	UNBOUNDED OBJECTIVE FONCTION. 
		The objective function seems unbounded (tends to -oo).
	400	TIMEOUT.
		time limit is reached.
	402	UNREACHED PRECISION. 
		The search is over but the resulting interval [uplo,loup]
		does not satisfy the precision requirements. There are
		several possible reasons: the goal function may be too 
		pessimistic or the constraints function may be too 
		pessimistic with respect to the precision requirement 
		(which can be too stringent). This results in tiny boxes 
		that can neither be contracted nor used as new loup candidates. 
		Finally, the eps_x parameter may be too large.


-----------------------
ibexopt option
=======================

To set these directives, assign a string specifying their values to the AMPL option ibexopt_options. For example:

ampl: option ibexopt_options 'rel_eps_f=1e-5 timeout=1000 rigor kkt simpl=2';


Keywords are followed by a value except those marked No value is expected in the listing.

 rel_eps_f		Relative precision on the objective.
 abs_eps_f		Absolute precision on the objective.
 eps_h			Equality relaxation value of the equality constraints.
 random_seed	Random seed (useful for reproducibility). 
 eps_x 			Precision on the variable (**Deprecated**). Default value is 0.
 timeout		Timeout (time in seconds). Default value is +oo.
 simpl			Expression simplification level. Possible values are:
				0:	no simplification at all (fast).
				1:	basic simplifications (fairly fast). E.g. x+1+1 --> x+2
				2:	more advanced simplifications without developing (can be slow). 
					E.g. x*x + x^2 --> 2x^2
				3:	simplifications with full polynomial developing (can blow up!). 
					E.g. x*(x-1) + x --> x^2
				Default value is : 1.
 initial_loup	Intial \"loup\" (a priori known upper bound).
 rigor			Activate rigor mode (certify feasibility of equalities).
 kkt			Activate contractor based on Kuhn-Tucker conditions.
 trace			Activate trace. Updates of loup/uplo are printed while minimizing.
 quiet			Print no report on the standard output.

-------------------------------

